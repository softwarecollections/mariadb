Don't test EDH-RSA-DES-CBC-SHA cipher, it seems to be removed from openssl
which now makes mariadb/mysql FTBFS because openssl_1 test fails

Related: #1044565


diff -up mariadb-10.0.16/mysql-test/r/openssl_1.result.testssl mariadb-10.0.16/mysql-test/r/openssl_1.result
--- mariadb-10.0.16/mysql-test/r/openssl_1.result.testssl	2015-01-25 16:21:38.000000000 +0100
+++ mariadb-10.0.16/mysql-test/r/openssl_1.result	2015-02-10 12:15:06.178207088 +0100
@@ -198,8 +198,6 @@ Ssl_cipher	DHE-RSA-AES256-SHA
 Variable_name	Value
 Ssl_cipher	EDH-RSA-DES-CBC3-SHA
 Variable_name	Value
-Ssl_cipher	EDH-RSA-DES-CBC-SHA
-Variable_name	Value
 Ssl_cipher	RC4-SHA
 select 'is still running; no cipher request crashed the server' as result from dual;
 result
diff -up mariadb-10.0.16/mysql-test/t/openssl_1.test.testssl mariadb-10.0.16/mysql-test/t/openssl_1.test
--- mariadb-10.0.16/mysql-test/t/openssl_1.test.testssl	2015-01-25 16:21:38.000000000 +0100
+++ mariadb-10.0.16/mysql-test/t/openssl_1.test	2015-02-10 12:16:49.769911038 +0100
@@ -132,7 +132,7 @@ drop table t1;
 # verification of servers certificate by setting both ca certificate
 # and ca path to NULL
 #
---replace_result DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES256-SHA
+--replace_result AES128-GCM-SHA256 DHE-RSA-AES256-SHA
 --exec $MYSQL --ssl --ssl-key=$MYSQL_TEST_DIR/std_data/client-key.pem --ssl-cert=$MYSQL_TEST_DIR/std_data/client-cert.pem -e "SHOW STATUS LIKE 'ssl_Cipher'" 2>&1
 --echo End of 5.0 tests
 
@@ -222,7 +222,7 @@ DROP TABLE t1;
 # Common ciphers to openssl and yassl
 --exec $MYSQL --host=localhost -e "SHOW STATUS LIKE 'Ssl_cipher';" --ssl-cipher=DHE-RSA-AES256-SHA
 --exec $MYSQL --host=localhost -e "SHOW STATUS LIKE 'Ssl_cipher';" --ssl-cipher=EDH-RSA-DES-CBC3-SHA
---exec $MYSQL --host=localhost -e "SHOW STATUS LIKE 'Ssl_cipher';" --ssl-cipher=EDH-RSA-DES-CBC-SHA
+#--exec $MYSQL --host=localhost -e "SHOW STATUS LIKE 'Ssl_cipher';" --ssl-cipher=EDH-RSA-DES-CBC-SHA
 --exec $MYSQL --host=localhost -e "SHOW STATUS LIKE 'Ssl_cipher';" --ssl-cipher=RC4-SHA
 --disable_query_log
 --disable_result_log
@@ -259,7 +259,7 @@ select 'is still running; no cipher requ
 GRANT SELECT ON test.* TO bug42158@localhost REQUIRE X509;
 FLUSH PRIVILEGES;
 connect(con1,localhost,bug42158,,,,,SSL);
---replace_result DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES256-SHA
+--replace_result AES128-GCM-SHA256 DHE-RSA-AES256-SHA
 SHOW STATUS LIKE 'Ssl_cipher';
 disconnect con1;
 connection default;
